package xyz.yooniks.exploitpatch.bukkit.listener;

import com.comphenix.protocol.PacketType;
import com.comphenix.protocol.events.ListenerPriority;
import com.comphenix.protocol.events.PacketAdapter;
import com.comphenix.protocol.events.PacketContainer;
import com.comphenix.protocol.events.PacketEvent;
import java.util.List;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.inventory.ItemStack;
import org.bukkit.plugin.Plugin;
import xyz.yooniks.exploitpatch.bukkit.connection.ConnectionCloser;
import xyz.yooniks.exploitpatch.bukkit.nbt.NBTChecker;

public class ItemPacketListener extends PacketAdapter {

  private final ConnectionCloser connectionCloser;
  private final List<NBTChecker> nbtCheckers;

  public ItemPacketListener(Plugin plugin, ConnectionCloser connectionCloser, List<NBTChecker> nbtCheckers, PacketType... packets) {
    super(plugin, ListenerPriority.LOWEST, packets);
    this.connectionCloser = connectionCloser;
    this.nbtCheckers = nbtCheckers;
  }

  @Override
  public void onPacketReceiving(PacketEvent event) {
    final Player player = event.getPlayer();
    if (player == null || this.connectionCloser.isClosing(player)) {
      event.setCancelled(true);
      return;
    }
    final PacketContainer packet = event.getPacket();
    final ItemStack item = packet.getItemModifier().read(0);
    if (item == null || item.getType() == Material.AIR) {
      return;
    }
    for (NBTChecker nbtChecker : this.nbtCheckers) {
      if (nbtChecker.isInvalid(item)) {
        event.setCancelled(true);
        this.connectionCloser.close(player);
        return;
      }
    }
  }

}
