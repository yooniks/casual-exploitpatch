import com.google.common.cache.Cache;
import com.google.common.cache.CacheBuilder;
import java.util.UUID;
import java.util.concurrent.Callable;
import java.util.concurrent.TimeUnit;
import org.junit.Assert;
import org.junit.Test;

public class CacheTests {

  private final Cache<UUID, Integer> payloads = CacheBuilder.newBuilder()
      .expireAfterWrite(10, TimeUnit.SECONDS)
      .build();

  @Test
  public void cacheMapTest() {
    final UUID uuid = UUID.randomUUID();
    final Callable<Integer> valueLoader = () -> 1;
    try {
      Assert.assertEquals(1, (int) this.payloads.get(uuid, valueLoader));
      for (int i = 0; i < 5; i++) {
        this.payloads.put(uuid, this.payloads.get(uuid, () -> 1) + 1);
      }

      //dump
      Thread.sleep(5000L);
      Assert.assertEquals(6, (int) this.payloads.get(uuid, valueLoader));
      Thread.sleep(6000L);
      Assert.assertEquals(1, (int) this.payloads.get(uuid, valueLoader));
    }
    catch (Exception ex) {
      ex.printStackTrace();
    }
  }

}
